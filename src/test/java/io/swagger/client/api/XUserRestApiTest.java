/*
 * Ranger REST API
 * Apache Ranger is a framework to enable, monitor and manage comprehensive data security across the Hadoop platform. Apache Ranger currently provides a centralized security adminstration, fine grain access control and detailed auditing for user access within Apache Hadoop, Apache Hive, Apache HBase and other Apache components
 *
 * OpenAPI spec version: 2.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.model.JsonGroupUserInfo;
import io.swagger.client.model.JsonRangerUserStore;
import io.swagger.client.model.JsonUsersGroupRoleAssignments;
import io.swagger.client.model.JsonVXAuditMap;
import io.swagger.client.model.JsonVXAuditMapList;
import io.swagger.client.model.JsonVXAuthSession;
import io.swagger.client.model.JsonVXAuthSessionList;
import io.swagger.client.model.JsonVXGroup;
import io.swagger.client.model.JsonVXGroupGroup;
import io.swagger.client.model.JsonVXGroupGroupList;
import io.swagger.client.model.JsonVXGroupList;
import io.swagger.client.model.JsonVXGroupPermission;
import io.swagger.client.model.JsonVXGroupPermissionList;
import io.swagger.client.model.JsonVXGroupUser;
import io.swagger.client.model.JsonVXGroupUserInfo;
import io.swagger.client.model.JsonVXGroupUserList;
import io.swagger.client.model.JsonVXLong;
import io.swagger.client.model.JsonVXModuleDef;
import io.swagger.client.model.JsonVXModuleDefList;
import io.swagger.client.model.JsonVXPermMap;
import io.swagger.client.model.JsonVXPermMapList;
import io.swagger.client.model.JsonVXStringList;
import io.swagger.client.model.JsonVXUgsyncAuditInfo;
import io.swagger.client.model.JsonVXUser;
import io.swagger.client.model.JsonVXUserGroupInfo;
import io.swagger.client.model.JsonVXUserList;
import io.swagger.client.model.JsonVXUserPermission;
import io.swagger.client.model.JsonVXUserPermissionList;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for XUserRestApi
 */
@Ignore
public class XUserRestApiTest {

    private final XUserRestApi api = new XUserRestApi();

    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addOrUpdateGroupUsersListTest() throws Exception {
        List<JsonGroupUserInfo> body = null;
        Integer response = api.addOrUpdateGroupUsersList(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addOrUpdateGroupsTest() throws Exception {
        JsonVXGroupList body = null;
        Integer response = api.addOrUpdateGroups(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addOrUpdateUsersTest() throws Exception {
        JsonVXUserList body = null;
        String response = api.addOrUpdateUsers(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void countXAuditMapsTest() throws Exception {
        JsonVXLong response = api.countXAuditMaps();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void countXGroupGroupsTest() throws Exception {
        JsonVXLong response = api.countXGroupGroups();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void countXGroupPermissionTest() throws Exception {
        JsonVXLong response = api.countXGroupPermission();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void countXGroupUsersTest() throws Exception {
        JsonVXLong response = api.countXGroupUsers();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void countXGroupsTest() throws Exception {
        JsonVXLong response = api.countXGroups();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void countXModuleDefTest() throws Exception {
        JsonVXLong response = api.countXModuleDef();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void countXPermMapsTest() throws Exception {
        JsonVXLong response = api.countXPermMaps();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void countXUserPermissionTest() throws Exception {
        JsonVXLong response = api.countXUserPermission();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void countXUsersTest() throws Exception {
        JsonVXLong response = api.countXUsers();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createExternalUserTest() throws Exception {
        JsonVXUser body = null;
        JsonVXUser response = api.createExternalUser(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createXAuditMapTest() throws Exception {
        JsonVXAuditMap body = null;
        JsonVXAuditMap response = api.createXAuditMap(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createXGroupTest() throws Exception {
        JsonVXGroup body = null;
        JsonVXGroup response = api.createXGroup(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createXGroupGroupTest() throws Exception {
        JsonVXGroupGroup body = null;
        JsonVXGroupGroup response = api.createXGroupGroup(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createXGroupPermissionTest() throws Exception {
        JsonVXGroupPermission body = null;
        JsonVXGroupPermission response = api.createXGroupPermission(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createXGroupUserTest() throws Exception {
        JsonVXGroupUser body = null;
        JsonVXGroupUser response = api.createXGroupUser(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createXGroupUserFromMapTest() throws Exception {
        JsonVXGroupUserInfo body = null;
        JsonVXGroupUserInfo response = api.createXGroupUserFromMap(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createXModuleDefPermissionTest() throws Exception {
        JsonVXModuleDef body = null;
        JsonVXModuleDef response = api.createXModuleDefPermission(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createXPermMapTest() throws Exception {
        JsonVXPermMap body = null;
        JsonVXPermMap response = api.createXPermMap(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createXUserTest() throws Exception {
        JsonVXUser body = null;
        JsonVXUser response = api.createXUser(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createXUserGroupFromMapTest() throws Exception {
        JsonVXUserGroupInfo body = null;
        JsonVXUserGroupInfo response = api.createXUserGroupFromMap(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createXUserPermissionTest() throws Exception {
        JsonVXUserPermission body = null;
        JsonVXUserPermission response = api.createXUserPermission(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteGroupsByGroupNameTest() throws Exception {
        JsonVXStringList body = null;
        api.deleteGroupsByGroupName(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteSingleGroupByGroupIdTest() throws Exception {
        Long groupId = null;
        api.deleteSingleGroupByGroupId(groupId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteSingleGroupByGroupNameTest() throws Exception {
        String groupName = null;
        api.deleteSingleGroupByGroupName(groupName);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteSingleUserByUserIdTest() throws Exception {
        Long userId = null;
        api.deleteSingleUserByUserId(userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteSingleUserByUserNameTest() throws Exception {
        String userName = null;
        api.deleteSingleUserByUserName(userName);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteUsersByUserNameTest() throws Exception {
        JsonVXStringList body = null;
        api.deleteUsersByUserName(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteXAuditMapTest() throws Exception {
        Long id = null;
        api.deleteXAuditMap(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteXGroupTest() throws Exception {
        Long id = null;
        api.deleteXGroup(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteXGroupAndXUserTest() throws Exception {
        String groupName = null;
        String userName = null;
        api.deleteXGroupAndXUser(groupName, userName);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteXGroupByGroupNameTest() throws Exception {
        String groupName = null;
        api.deleteXGroupByGroupName(groupName);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteXGroupGroupTest() throws Exception {
        Long id = null;
        api.deleteXGroupGroup(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteXGroupPermissionTest() throws Exception {
        Long id = null;
        api.deleteXGroupPermission(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteXGroupUserTest() throws Exception {
        Long id = null;
        api.deleteXGroupUser(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteXModuleDefPermissionTest() throws Exception {
        Long id = null;
        api.deleteXModuleDefPermission(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteXPermMapTest() throws Exception {
        Long id = null;
        api.deleteXPermMap(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteXUserTest() throws Exception {
        Long id = null;
        api.deleteXUser(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteXUserByUserNameTest() throws Exception {
        String userName = null;
        api.deleteXUserByUserName(userName);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteXUserPermissionTest() throws Exception {
        Long id = null;
        api.deleteXUserPermission(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAllGroupUsersTest() throws Exception {
        Map<String, List<String>> response = api.getAllGroupUsers();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAuthSessionTest() throws Exception {
        JsonVXAuthSession response = api.getAuthSession();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAuthSessionsTest() throws Exception {
        JsonVXAuthSessionList response = api.getAuthSessions();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getGroupsLookupTest() throws Exception {
        JsonVXStringList response = api.getGroupsLookup();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getSecureRangerUserStoreIfUpdatedTest() throws Exception {
        String serviceName = null;
        String clusterName = null;
        Long lastActivationTime = null;
        Long lastKnownUserStoreVersion = null;
        String pluginCapabilities = null;
        String pluginId = null;
        JsonRangerUserStore response = api.getSecureRangerUserStoreIfUpdated(serviceName, clusterName, lastActivationTime, lastKnownUserStoreVersion, pluginCapabilities, pluginId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUserRolesByExternalIDTest() throws Exception {
        Long userId = null;
        JsonVXStringList response = api.getUserRolesByExternalID(userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUserRolesByNameTest() throws Exception {
        String userName = null;
        JsonVXStringList response = api.getUserRolesByName(userName);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUsersLookupTest() throws Exception {
        JsonVXStringList response = api.getUsersLookup();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getXAuditMapTest() throws Exception {
        Long id = null;
        JsonVXAuditMap response = api.getXAuditMap(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getXGroupTest() throws Exception {
        Long id = null;
        JsonVXGroup response = api.getXGroup(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getXGroupByGroupNameTest() throws Exception {
        String groupName = null;
        JsonVXGroup response = api.getXGroupByGroupName(groupName);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getXGroupGroupTest() throws Exception {
        Long id = null;
        JsonVXGroupGroup response = api.getXGroupGroup(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getXGroupPermissionTest() throws Exception {
        Long id = null;
        JsonVXGroupPermission response = api.getXGroupPermission(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getXGroupUserTest() throws Exception {
        Long id = null;
        JsonVXGroupUser response = api.getXGroupUser(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getXGroupUsersTest() throws Exception {
        Long groupId = null;
        JsonVXUserList response = api.getXGroupUsers(groupId);

        // TODO: test validations
    }
    
    /**
     * Implements the traditional search functionalities for XGroupUsers by Group name.
     *
     * Implements the traditional search functionalities for XGroupUsers by Group name
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getXGroupUsersByGroupNameTest() throws Exception {
        String groupName = null;
        JsonVXGroupUserInfo response = api.getXGroupUsersByGroupName(groupName);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getXModuleDefPermissionTest() throws Exception {
        Long id = null;
        JsonVXModuleDef response = api.getXModuleDefPermission(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getXPermMapTest() throws Exception {
        Long id = null;
        JsonVXPermMap response = api.getXPermMap(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getXUserTest() throws Exception {
        Long id = null;
        JsonVXUser response = api.getXUser(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getXUserByUserNameTest() throws Exception {
        String userName = null;
        JsonVXUser response = api.getXUserByUserName(userName);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getXUserGroupsTest() throws Exception {
        Long userId = null;
        JsonVXGroupList response = api.getXUserGroups(userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getXUserPermissionTest() throws Exception {
        Long id = null;
        JsonVXUserPermission response = api.getXUserPermission(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void modifyGroupsVisibilityTest() throws Exception {
        Object body = null;
        api.modifyGroupsVisibility(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void modifyUserActiveStatusTest() throws Exception {
        Object body = null;
        api.modifyUserActiveStatus(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void modifyUserVisibilityTest() throws Exception {
        Object body = null;
        api.modifyUserVisibility(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void postUserGroupAuditInfoTest() throws Exception {
        JsonVXUgsyncAuditInfo body = null;
        JsonVXUgsyncAuditInfo response = api.postUserGroupAuditInfo(body);

        // TODO: test validations
    }
    
    /**
     * Implements the traditional search functionalities for XAuditMaps.
     *
     * Implements the traditional search functionalities for XAuditMaps
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void searchXAuditMapsTest() throws Exception {
        JsonVXAuditMapList response = api.searchXAuditMaps();

        // TODO: test validations
    }
    
    /**
     * Implements the traditional search functionalities for XGroupGroups.
     *
     * Implements the traditional search functionalities for XGroupGroups
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void searchXGroupGroupsTest() throws Exception {
        JsonVXGroupGroupList response = api.searchXGroupGroups();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void searchXGroupPermissionTest() throws Exception {
        JsonVXGroupPermissionList response = api.searchXGroupPermission();

        // TODO: test validations
    }
    
    /**
     * Implements the traditional search functionalities for XGroupUsers.
     *
     * Implements the traditional search functionalities for XGroupUsers
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void searchXGroupUsersTest() throws Exception {
        JsonVXGroupUserList response = api.searchXGroupUsers();

        // TODO: test validations
    }
    
    /**
     * Implements the traditional search functionalities for XGroups.
     *
     * Implements the traditional search functionalities for XGroups
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void searchXGroupsTest() throws Exception {
        JsonVXGroupList response = api.searchXGroups();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void searchXModuleDefTest() throws Exception {
        JsonVXModuleDefList response = api.searchXModuleDef();

        // TODO: test validations
    }
    
    /**
     * Implements the traditional search functionalities for XPermMaps.
     *
     * Implements the traditional search functionalities for XPermMaps
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void searchXPermMapsTest() throws Exception {
        JsonVXPermMapList response = api.searchXPermMaps();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void searchXUserPermissionTest() throws Exception {
        JsonVXUserPermissionList response = api.searchXUserPermission();

        // TODO: test validations
    }
    
    /**
     * Implements the traditional search functionalities for XUsers.
     *
     * Implements the traditional search functionalities for XUsers
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void searchXUsersTest() throws Exception {
        JsonVXUserList response = api.searchXUsers();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void secureCreateXGroupTest() throws Exception {
        JsonVXGroup body = null;
        JsonVXGroup response = api.secureCreateXGroup(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void secureCreateXUserTest() throws Exception {
        JsonVXUser body = null;
        JsonVXUser response = api.secureCreateXUser(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void secureGetXGroupTest() throws Exception {
        Long id = null;
        JsonVXGroup response = api.secureGetXGroup(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void secureGetXUserTest() throws Exception {
        Long id = null;
        JsonVXUser response = api.secureGetXUser(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void secureUpdateXGroupTest() throws Exception {
        JsonVXGroup body = null;
        JsonVXGroup response = api.secureUpdateXGroup(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void secureUpdateXUserTest() throws Exception {
        JsonVXUser body = null;
        JsonVXUser response = api.secureUpdateXUser(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void setUserRolesByExternalIDTest() throws Exception {
        Long userId = null;
        JsonVXStringList body = null;
        JsonVXStringList response = api.setUserRolesByExternalID(userId, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void setUserRolesByNameTest() throws Exception {
        String userName = null;
        JsonVXStringList body = null;
        JsonVXStringList response = api.setUserRolesByName(userName, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void setXUserRolesByNameTest() throws Exception {
        JsonUsersGroupRoleAssignments body = null;
        List<String> response = api.setXUserRolesByName(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateDeletedGroupsTest() throws Exception {
        List<String> body = null;
        Integer response = api.updateDeletedGroups(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateDeletedUsersTest() throws Exception {
        List<String> body = null;
        Integer response = api.updateDeletedUsers(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateXAuditMapTest() throws Exception {
        JsonVXAuditMap body = null;
        JsonVXAuditMap response = api.updateXAuditMap(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateXGroupTest() throws Exception {
        JsonVXGroup body = null;
        JsonVXGroup response = api.updateXGroup(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateXGroupGroupTest() throws Exception {
        JsonVXGroupGroup body = null;
        JsonVXGroupGroup response = api.updateXGroupGroup(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateXGroupPermissionTest() throws Exception {
        JsonVXGroupPermission body = null;
        JsonVXGroupPermission response = api.updateXGroupPermission(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateXGroupUserTest() throws Exception {
        JsonVXGroupUser body = null;
        JsonVXGroupUser response = api.updateXGroupUser(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateXModuleDefPermissionTest() throws Exception {
        JsonVXModuleDef body = null;
        JsonVXModuleDef response = api.updateXModuleDefPermission(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateXPermMapTest() throws Exception {
        JsonVXPermMap body = null;
        JsonVXPermMap response = api.updateXPermMap(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateXUserTest() throws Exception {
        JsonVXUser body = null;
        JsonVXUser response = api.updateXUser(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateXUserPermissionTest() throws Exception {
        JsonVXUserPermission body = null;
        JsonVXUserPermission response = api.updateXUserPermission(body);

        // TODO: test validations
    }
    
}
