/*
 * Ranger REST API
 * Apache Ranger is a framework to enable, monitor and manage comprehensive data security across the Hadoop platform. Apache Ranger currently provides a centralized security adminstration, fine grain access control and detailed auditing for user access within Apache Hadoop, Apache Hive, Apache HBase and other Apache components
 *
 * OpenAPI spec version: 2.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.JsonRangerBaseModelObject;
import io.swagger.client.model.JsonRangerDataMaskPolicyItem;
import io.swagger.client.model.JsonRangerPolicyItem;
import io.swagger.client.model.JsonRangerPolicyItemCondition;
import io.swagger.client.model.JsonRangerPolicyResource;
import io.swagger.client.model.JsonRangerRowFilterPolicyItem;
import io.swagger.client.model.JsonRangerValiditySchedule;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-02-15T15:05:51.243Z")
public class JsonRangerPolicy extends JsonRangerBaseModelObject {
  @SerializedName("denyExceptions")
  private List<JsonRangerPolicyItem> denyExceptions = null;

  @SerializedName("allowExceptions")
  private List<JsonRangerPolicyItem> allowExceptions = null;

  @SerializedName("validitySchedules")
  private List<JsonRangerValiditySchedule> validitySchedules = null;

  @SerializedName("policyPriority")
  private BigDecimal policyPriority = null;

  @SerializedName("policyType")
  private BigDecimal policyType = null;

  @SerializedName("isAuditEnabled")
  private Boolean isAuditEnabled = null;

  @SerializedName("zoneName")
  private String zoneName = null;

  @SerializedName("denyPolicyItems")
  private List<JsonRangerPolicyItem> denyPolicyItems = null;

  @SerializedName("service")
  private String service = null;

  @SerializedName("resources")
  private Map<String, JsonRangerPolicyResource> resources = null;

  @SerializedName("dataMaskPolicyItems")
  private List<JsonRangerDataMaskPolicyItem> dataMaskPolicyItems = null;

  @SerializedName("rowFilterPolicyItems")
  private List<JsonRangerRowFilterPolicyItem> rowFilterPolicyItems = null;

  @SerializedName("policyItems")
  private List<JsonRangerPolicyItem> policyItems = null;

  @SerializedName("policyLabels")
  private List<String> policyLabels = null;

  @SerializedName("resourceSignature")
  private String resourceSignature = null;

  @SerializedName("isDenyAllElse")
  private Boolean isDenyAllElse = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("serviceType")
  private String serviceType = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("conditions")
  private List<JsonRangerPolicyItemCondition> conditions = null;

  @SerializedName("options")
  private Map<String, Object> options = null;

  public JsonRangerPolicy denyExceptions(List<JsonRangerPolicyItem> denyExceptions) {
    this.denyExceptions = denyExceptions;
    return this;
  }

  public JsonRangerPolicy addDenyExceptionsItem(JsonRangerPolicyItem denyExceptionsItem) {
    if (this.denyExceptions == null) {
      this.denyExceptions = new ArrayList<JsonRangerPolicyItem>();
    }
    this.denyExceptions.add(denyExceptionsItem);
    return this;
  }

   /**
   * 
   * @return denyExceptions
  **/
  @ApiModelProperty(value = "")
  public List<JsonRangerPolicyItem> getDenyExceptions() {
    return denyExceptions;
  }

  public void setDenyExceptions(List<JsonRangerPolicyItem> denyExceptions) {
    this.denyExceptions = denyExceptions;
  }

  public JsonRangerPolicy allowExceptions(List<JsonRangerPolicyItem> allowExceptions) {
    this.allowExceptions = allowExceptions;
    return this;
  }

  public JsonRangerPolicy addAllowExceptionsItem(JsonRangerPolicyItem allowExceptionsItem) {
    if (this.allowExceptions == null) {
      this.allowExceptions = new ArrayList<JsonRangerPolicyItem>();
    }
    this.allowExceptions.add(allowExceptionsItem);
    return this;
  }

   /**
   * 
   * @return allowExceptions
  **/
  @ApiModelProperty(value = "")
  public List<JsonRangerPolicyItem> getAllowExceptions() {
    return allowExceptions;
  }

  public void setAllowExceptions(List<JsonRangerPolicyItem> allowExceptions) {
    this.allowExceptions = allowExceptions;
  }

  public JsonRangerPolicy validitySchedules(List<JsonRangerValiditySchedule> validitySchedules) {
    this.validitySchedules = validitySchedules;
    return this;
  }

  public JsonRangerPolicy addValiditySchedulesItem(JsonRangerValiditySchedule validitySchedulesItem) {
    if (this.validitySchedules == null) {
      this.validitySchedules = new ArrayList<JsonRangerValiditySchedule>();
    }
    this.validitySchedules.add(validitySchedulesItem);
    return this;
  }

   /**
   * 
   * @return validitySchedules
  **/
  @ApiModelProperty(value = "")
  public List<JsonRangerValiditySchedule> getValiditySchedules() {
    return validitySchedules;
  }

  public void setValiditySchedules(List<JsonRangerValiditySchedule> validitySchedules) {
    this.validitySchedules = validitySchedules;
  }

  public JsonRangerPolicy policyPriority(BigDecimal policyPriority) {
    this.policyPriority = policyPriority;
    return this;
  }

   /**
   * 
   * @return policyPriority
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getPolicyPriority() {
    return policyPriority;
  }

  public void setPolicyPriority(BigDecimal policyPriority) {
    this.policyPriority = policyPriority;
  }

  public JsonRangerPolicy policyType(BigDecimal policyType) {
    this.policyType = policyType;
    return this;
  }

   /**
   * 
   * @return policyType
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getPolicyType() {
    return policyType;
  }

  public void setPolicyType(BigDecimal policyType) {
    this.policyType = policyType;
  }

  public JsonRangerPolicy isAuditEnabled(Boolean isAuditEnabled) {
    this.isAuditEnabled = isAuditEnabled;
    return this;
  }

   /**
   * 
   * @return isAuditEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsAuditEnabled() {
    return isAuditEnabled;
  }

  public void setIsAuditEnabled(Boolean isAuditEnabled) {
    this.isAuditEnabled = isAuditEnabled;
  }

  public JsonRangerPolicy zoneName(String zoneName) {
    this.zoneName = zoneName;
    return this;
  }

   /**
   * 
   * @return zoneName
  **/
  @ApiModelProperty(value = "")
  public String getZoneName() {
    return zoneName;
  }

  public void setZoneName(String zoneName) {
    this.zoneName = zoneName;
  }

  public JsonRangerPolicy denyPolicyItems(List<JsonRangerPolicyItem> denyPolicyItems) {
    this.denyPolicyItems = denyPolicyItems;
    return this;
  }

  public JsonRangerPolicy addDenyPolicyItemsItem(JsonRangerPolicyItem denyPolicyItemsItem) {
    if (this.denyPolicyItems == null) {
      this.denyPolicyItems = new ArrayList<JsonRangerPolicyItem>();
    }
    this.denyPolicyItems.add(denyPolicyItemsItem);
    return this;
  }

   /**
   * 
   * @return denyPolicyItems
  **/
  @ApiModelProperty(value = "")
  public List<JsonRangerPolicyItem> getDenyPolicyItems() {
    return denyPolicyItems;
  }

  public void setDenyPolicyItems(List<JsonRangerPolicyItem> denyPolicyItems) {
    this.denyPolicyItems = denyPolicyItems;
  }

  public JsonRangerPolicy service(String service) {
    this.service = service;
    return this;
  }

   /**
   * 
   * @return service
  **/
  @ApiModelProperty(value = "")
  public String getService() {
    return service;
  }

  public void setService(String service) {
    this.service = service;
  }

  public JsonRangerPolicy resources(Map<String, JsonRangerPolicyResource> resources) {
    this.resources = resources;
    return this;
  }

  public JsonRangerPolicy putResourcesItem(String key, JsonRangerPolicyResource resourcesItem) {
    if (this.resources == null) {
      this.resources = new HashMap<String, JsonRangerPolicyResource>();
    }
    this.resources.put(key, resourcesItem);
    return this;
  }

   /**
   * 
   * @return resources
  **/
  @ApiModelProperty(value = "")
  public Map<String, JsonRangerPolicyResource> getResources() {
    return resources;
  }

  public void setResources(Map<String, JsonRangerPolicyResource> resources) {
    this.resources = resources;
  }

  public JsonRangerPolicy dataMaskPolicyItems(List<JsonRangerDataMaskPolicyItem> dataMaskPolicyItems) {
    this.dataMaskPolicyItems = dataMaskPolicyItems;
    return this;
  }

  public JsonRangerPolicy addDataMaskPolicyItemsItem(JsonRangerDataMaskPolicyItem dataMaskPolicyItemsItem) {
    if (this.dataMaskPolicyItems == null) {
      this.dataMaskPolicyItems = new ArrayList<JsonRangerDataMaskPolicyItem>();
    }
    this.dataMaskPolicyItems.add(dataMaskPolicyItemsItem);
    return this;
  }

   /**
   * 
   * @return dataMaskPolicyItems
  **/
  @ApiModelProperty(value = "")
  public List<JsonRangerDataMaskPolicyItem> getDataMaskPolicyItems() {
    return dataMaskPolicyItems;
  }

  public void setDataMaskPolicyItems(List<JsonRangerDataMaskPolicyItem> dataMaskPolicyItems) {
    this.dataMaskPolicyItems = dataMaskPolicyItems;
  }

  public JsonRangerPolicy rowFilterPolicyItems(List<JsonRangerRowFilterPolicyItem> rowFilterPolicyItems) {
    this.rowFilterPolicyItems = rowFilterPolicyItems;
    return this;
  }

  public JsonRangerPolicy addRowFilterPolicyItemsItem(JsonRangerRowFilterPolicyItem rowFilterPolicyItemsItem) {
    if (this.rowFilterPolicyItems == null) {
      this.rowFilterPolicyItems = new ArrayList<JsonRangerRowFilterPolicyItem>();
    }
    this.rowFilterPolicyItems.add(rowFilterPolicyItemsItem);
    return this;
  }

   /**
   * 
   * @return rowFilterPolicyItems
  **/
  @ApiModelProperty(value = "")
  public List<JsonRangerRowFilterPolicyItem> getRowFilterPolicyItems() {
    return rowFilterPolicyItems;
  }

  public void setRowFilterPolicyItems(List<JsonRangerRowFilterPolicyItem> rowFilterPolicyItems) {
    this.rowFilterPolicyItems = rowFilterPolicyItems;
  }

  public JsonRangerPolicy policyItems(List<JsonRangerPolicyItem> policyItems) {
    this.policyItems = policyItems;
    return this;
  }

  public JsonRangerPolicy addPolicyItemsItem(JsonRangerPolicyItem policyItemsItem) {
    if (this.policyItems == null) {
      this.policyItems = new ArrayList<JsonRangerPolicyItem>();
    }
    this.policyItems.add(policyItemsItem);
    return this;
  }

   /**
   * 
   * @return policyItems
  **/
  @ApiModelProperty(value = "")
  public List<JsonRangerPolicyItem> getPolicyItems() {
    return policyItems;
  }

  public void setPolicyItems(List<JsonRangerPolicyItem> policyItems) {
    this.policyItems = policyItems;
  }

  public JsonRangerPolicy policyLabels(List<String> policyLabels) {
    this.policyLabels = policyLabels;
    return this;
  }

  public JsonRangerPolicy addPolicyLabelsItem(String policyLabelsItem) {
    if (this.policyLabels == null) {
      this.policyLabels = new ArrayList<String>();
    }
    this.policyLabels.add(policyLabelsItem);
    return this;
  }

   /**
   * 
   * @return policyLabels
  **/
  @ApiModelProperty(value = "")
  public List<String> getPolicyLabels() {
    return policyLabels;
  }

  public void setPolicyLabels(List<String> policyLabels) {
    this.policyLabels = policyLabels;
  }

  public JsonRangerPolicy resourceSignature(String resourceSignature) {
    this.resourceSignature = resourceSignature;
    return this;
  }

   /**
   * 
   * @return resourceSignature
  **/
  @ApiModelProperty(value = "")
  public String getResourceSignature() {
    return resourceSignature;
  }

  public void setResourceSignature(String resourceSignature) {
    this.resourceSignature = resourceSignature;
  }

  public JsonRangerPolicy isDenyAllElse(Boolean isDenyAllElse) {
    this.isDenyAllElse = isDenyAllElse;
    return this;
  }

   /**
   * 
   * @return isDenyAllElse
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsDenyAllElse() {
    return isDenyAllElse;
  }

  public void setIsDenyAllElse(Boolean isDenyAllElse) {
    this.isDenyAllElse = isDenyAllElse;
  }

  public JsonRangerPolicy name(String name) {
    this.name = name;
    return this;
  }

   /**
   * 
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public JsonRangerPolicy serviceType(String serviceType) {
    this.serviceType = serviceType;
    return this;
  }

   /**
   * 
   * @return serviceType
  **/
  @ApiModelProperty(value = "")
  public String getServiceType() {
    return serviceType;
  }

  public void setServiceType(String serviceType) {
    this.serviceType = serviceType;
  }

  public JsonRangerPolicy description(String description) {
    this.description = description;
    return this;
  }

   /**
   * 
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public JsonRangerPolicy conditions(List<JsonRangerPolicyItemCondition> conditions) {
    this.conditions = conditions;
    return this;
  }

  public JsonRangerPolicy addConditionsItem(JsonRangerPolicyItemCondition conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<JsonRangerPolicyItemCondition>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * 
   * @return conditions
  **/
  @ApiModelProperty(value = "")
  public List<JsonRangerPolicyItemCondition> getConditions() {
    return conditions;
  }

  public void setConditions(List<JsonRangerPolicyItemCondition> conditions) {
    this.conditions = conditions;
  }

  public JsonRangerPolicy options(Map<String, Object> options) {
    this.options = options;
    return this;
  }

  public JsonRangerPolicy putOptionsItem(String key, Object optionsItem) {
    if (this.options == null) {
      this.options = new HashMap<String, Object>();
    }
    this.options.put(key, optionsItem);
    return this;
  }

   /**
   * 
   * @return options
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getOptions() {
    return options;
  }

  public void setOptions(Map<String, Object> options) {
    this.options = options;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonRangerPolicy jsonRangerPolicy = (JsonRangerPolicy) o;
    return Objects.equals(this.denyExceptions, jsonRangerPolicy.denyExceptions) &&
        Objects.equals(this.allowExceptions, jsonRangerPolicy.allowExceptions) &&
        Objects.equals(this.validitySchedules, jsonRangerPolicy.validitySchedules) &&
        Objects.equals(this.policyPriority, jsonRangerPolicy.policyPriority) &&
        Objects.equals(this.policyType, jsonRangerPolicy.policyType) &&
        Objects.equals(this.isAuditEnabled, jsonRangerPolicy.isAuditEnabled) &&
        Objects.equals(this.zoneName, jsonRangerPolicy.zoneName) &&
        Objects.equals(this.denyPolicyItems, jsonRangerPolicy.denyPolicyItems) &&
        Objects.equals(this.service, jsonRangerPolicy.service) &&
        Objects.equals(this.resources, jsonRangerPolicy.resources) &&
        Objects.equals(this.dataMaskPolicyItems, jsonRangerPolicy.dataMaskPolicyItems) &&
        Objects.equals(this.rowFilterPolicyItems, jsonRangerPolicy.rowFilterPolicyItems) &&
        Objects.equals(this.policyItems, jsonRangerPolicy.policyItems) &&
        Objects.equals(this.policyLabels, jsonRangerPolicy.policyLabels) &&
        Objects.equals(this.resourceSignature, jsonRangerPolicy.resourceSignature) &&
        Objects.equals(this.isDenyAllElse, jsonRangerPolicy.isDenyAllElse) &&
        Objects.equals(this.name, jsonRangerPolicy.name) &&
        Objects.equals(this.serviceType, jsonRangerPolicy.serviceType) &&
        Objects.equals(this.description, jsonRangerPolicy.description) &&
        Objects.equals(this.conditions, jsonRangerPolicy.conditions) &&
        Objects.equals(this.options, jsonRangerPolicy.options) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(denyExceptions, allowExceptions, validitySchedules, policyPriority, policyType, isAuditEnabled, zoneName, denyPolicyItems, service, resources, dataMaskPolicyItems, rowFilterPolicyItems, policyItems, policyLabels, resourceSignature, isDenyAllElse, name, serviceType, description, conditions, options, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonRangerPolicy {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    denyExceptions: ").append(toIndentedString(denyExceptions)).append("\n");
    sb.append("    allowExceptions: ").append(toIndentedString(allowExceptions)).append("\n");
    sb.append("    validitySchedules: ").append(toIndentedString(validitySchedules)).append("\n");
    sb.append("    policyPriority: ").append(toIndentedString(policyPriority)).append("\n");
    sb.append("    policyType: ").append(toIndentedString(policyType)).append("\n");
    sb.append("    isAuditEnabled: ").append(toIndentedString(isAuditEnabled)).append("\n");
    sb.append("    zoneName: ").append(toIndentedString(zoneName)).append("\n");
    sb.append("    denyPolicyItems: ").append(toIndentedString(denyPolicyItems)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    dataMaskPolicyItems: ").append(toIndentedString(dataMaskPolicyItems)).append("\n");
    sb.append("    rowFilterPolicyItems: ").append(toIndentedString(rowFilterPolicyItems)).append("\n");
    sb.append("    policyItems: ").append(toIndentedString(policyItems)).append("\n");
    sb.append("    policyLabels: ").append(toIndentedString(policyLabels)).append("\n");
    sb.append("    resourceSignature: ").append(toIndentedString(resourceSignature)).append("\n");
    sb.append("    isDenyAllElse: ").append(toIndentedString(isDenyAllElse)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

