/*
 * Ranger REST API
 * Apache Ranger is a framework to enable, monitor and manage comprehensive data security across the Hadoop platform. Apache Ranger currently provides a centralized security adminstration, fine grain access control and detailed auditing for user access within Apache Hadoop, Apache Hive, Apache HBase and other Apache components
 *
 * OpenAPI spec version: 2.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-02-15T15:05:51.243Z")
public class JsonRangerDataMaskTypeDef {
  @SerializedName("itemId")
  private BigDecimal itemId = null;

  @SerializedName("rbKeyDescription")
  private String rbKeyDescription = null;

  @SerializedName("rbKeyLabel")
  private String rbKeyLabel = null;

  @SerializedName("dataMaskOptions")
  private Map<String, String> dataMaskOptions = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("transformer")
  private String transformer = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("label")
  private String label = null;

  public JsonRangerDataMaskTypeDef itemId(BigDecimal itemId) {
    this.itemId = itemId;
    return this;
  }

   /**
   * 
   * @return itemId
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getItemId() {
    return itemId;
  }

  public void setItemId(BigDecimal itemId) {
    this.itemId = itemId;
  }

  public JsonRangerDataMaskTypeDef rbKeyDescription(String rbKeyDescription) {
    this.rbKeyDescription = rbKeyDescription;
    return this;
  }

   /**
   * 
   * @return rbKeyDescription
  **/
  @ApiModelProperty(value = "")
  public String getRbKeyDescription() {
    return rbKeyDescription;
  }

  public void setRbKeyDescription(String rbKeyDescription) {
    this.rbKeyDescription = rbKeyDescription;
  }

  public JsonRangerDataMaskTypeDef rbKeyLabel(String rbKeyLabel) {
    this.rbKeyLabel = rbKeyLabel;
    return this;
  }

   /**
   * 
   * @return rbKeyLabel
  **/
  @ApiModelProperty(value = "")
  public String getRbKeyLabel() {
    return rbKeyLabel;
  }

  public void setRbKeyLabel(String rbKeyLabel) {
    this.rbKeyLabel = rbKeyLabel;
  }

  public JsonRangerDataMaskTypeDef dataMaskOptions(Map<String, String> dataMaskOptions) {
    this.dataMaskOptions = dataMaskOptions;
    return this;
  }

  public JsonRangerDataMaskTypeDef putDataMaskOptionsItem(String key, String dataMaskOptionsItem) {
    if (this.dataMaskOptions == null) {
      this.dataMaskOptions = new HashMap<String, String>();
    }
    this.dataMaskOptions.put(key, dataMaskOptionsItem);
    return this;
  }

   /**
   * 
   * @return dataMaskOptions
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getDataMaskOptions() {
    return dataMaskOptions;
  }

  public void setDataMaskOptions(Map<String, String> dataMaskOptions) {
    this.dataMaskOptions = dataMaskOptions;
  }

  public JsonRangerDataMaskTypeDef description(String description) {
    this.description = description;
    return this;
  }

   /**
   * 
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public JsonRangerDataMaskTypeDef transformer(String transformer) {
    this.transformer = transformer;
    return this;
  }

   /**
   * 
   * @return transformer
  **/
  @ApiModelProperty(value = "")
  public String getTransformer() {
    return transformer;
  }

  public void setTransformer(String transformer) {
    this.transformer = transformer;
  }

  public JsonRangerDataMaskTypeDef name(String name) {
    this.name = name;
    return this;
  }

   /**
   * 
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public JsonRangerDataMaskTypeDef label(String label) {
    this.label = label;
    return this;
  }

   /**
   * 
   * @return label
  **/
  @ApiModelProperty(value = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonRangerDataMaskTypeDef jsonRangerDataMaskTypeDef = (JsonRangerDataMaskTypeDef) o;
    return Objects.equals(this.itemId, jsonRangerDataMaskTypeDef.itemId) &&
        Objects.equals(this.rbKeyDescription, jsonRangerDataMaskTypeDef.rbKeyDescription) &&
        Objects.equals(this.rbKeyLabel, jsonRangerDataMaskTypeDef.rbKeyLabel) &&
        Objects.equals(this.dataMaskOptions, jsonRangerDataMaskTypeDef.dataMaskOptions) &&
        Objects.equals(this.description, jsonRangerDataMaskTypeDef.description) &&
        Objects.equals(this.transformer, jsonRangerDataMaskTypeDef.transformer) &&
        Objects.equals(this.name, jsonRangerDataMaskTypeDef.name) &&
        Objects.equals(this.label, jsonRangerDataMaskTypeDef.label);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemId, rbKeyDescription, rbKeyLabel, dataMaskOptions, description, transformer, name, label);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonRangerDataMaskTypeDef {\n");
    
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    rbKeyDescription: ").append(toIndentedString(rbKeyDescription)).append("\n");
    sb.append("    rbKeyLabel: ").append(toIndentedString(rbKeyLabel)).append("\n");
    sb.append("    dataMaskOptions: ").append(toIndentedString(dataMaskOptions)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    transformer: ").append(toIndentedString(transformer)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

